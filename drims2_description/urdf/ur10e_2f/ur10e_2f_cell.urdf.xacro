<?xml version='1.0' encoding='utf-8'?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="platform">

   <!-- ur10e parameters -->
   <xacro:include filename="$(find ur_description)/urdf/ur_macro.xacro"/>
   <xacro:arg name="ur_type" default="ur10e"/>
   <xacro:arg name="name" default="ur10e"/>
   <xacro:arg name="robot_ip" default="0.0.0.0" />
   <xacro:arg name="robotiq_com_port" default="/dev/robotiq" />

   <!-- parameters -->
   <xacro:arg name="tf_prefix" default="" />
   <xacro:arg name="joint_limit_params" default="$(find drims2_description)/config/$(arg ur_type)/joint_limits.yaml"/>
   <xacro:arg name="kinematics_params" default="$(find ur_description)/config/$(arg ur_type)/default_kinematics.yaml"/>
   <xacro:arg name="physical_params" default="$(find ur_description)/config/$(arg ur_type)/physical_parameters.yaml"/>
   <xacro:arg name="visual_params" default="$(find ur_description)/config/$(arg ur_type)/visual_parameters.yaml"/>
   <xacro:arg name="transmission_hw_interface" default=""/>
   <xacro:arg name="safety_limits" default="false"/>
   <xacro:arg name="safety_pos_margin" default="0.15"/>
   <xacro:arg name="safety_k_position" default="20"/>
   <!-- ros2_control related parameters -->
   <xacro:arg name="headless_mode" default="false" />
   <xacro:arg name="script_filename" default="$(find ur_client_library)/resources/external_control.urscript"/>
   <xacro:arg name="input_recipe_filename" default="$(find ur_robot_driver)/resources/rtde_input_recipe.txt"/>
   <xacro:arg name="output_recipe_filename" default="$(find ur_robot_driver)/resources/rtde_output_recipe.txt"/>
   <xacro:arg name="reverse_ip" default="0.0.0.0"/>
   <xacro:arg name="script_command_port" default="50004"/>
   <xacro:arg name="reverse_port" default="50001"/>
   <xacro:arg name="script_sender_port" default="50002"/>
   <xacro:arg name="trajectory_port" default="50003"/>
   <!--   tool communication related parameters-->
   <xacro:arg name="use_tool_communication" default="true" />
   <xacro:arg name="tool_voltage" default="24" />
   <xacro:arg name="tool_parity" default="0" />
   <xacro:arg name="tool_baud_rate" default="115200" />
   <xacro:arg name="tool_stop_bits" default="1" />
   <xacro:arg name="tool_rx_idle_chars" default="1.5" />
   <xacro:arg name="tool_tx_idle_chars" default="3.5" />
   <xacro:arg name="tool_device_name" default="/tmp/ttyUR" />
   <xacro:arg name="tool_tcp_port" default="54321" />

   <!-- Simulation parameters -->
   <xacro:arg name="use_fake_hardware" default="true" />
   <xacro:arg name="fake_sensor_commands" default="false" />
   <xacro:arg name="sim_gazebo" default="false" />
   <xacro:arg name="sim_ignition" default="false" />
   <xacro:arg name="simulation_controllers" default="" />

   <!-- initial position for simulations (Fake Hardware, Gazebo, Ignition) -->
   <xacro:arg name="initial_positions_file" default="$(find drims2_description)/urdf/$(arg ur_type)_2f/initial_positions.yaml"/>

   <!-- convert to property to use substitution in function -->
   <xacro:property name="initial_positions_file" default="$(arg initial_positions_file)"/>

   <!-- Declare 'world' -->
   <link name="world"/>

   <!-- Table parameters -->
   <xacro:property name="table_length" value="1.3"/>
   <xacro:property name="table_width" value="0.95"/>
   <xacro:property name="table_height" value="0.75"/>
   <xacro:property name="table_thickness" value="0.05"/>
   <xacro:property name="leg_width" value="0.05"/>

   <link name="table_top">
      <visual>
         <geometry>
            <box size="${table_length} ${table_width} ${table_thickness}"/>
         </geometry>
         <origin xyz="0 0 -${table_thickness/2}" rpy="0 0 0"/>
         <material name="brown">
            <color rgba="0.4 0.2 0 1"/>
         </material>
      </visual>
      <collision>
         <geometry>
            <box size="${table_length} ${table_width} ${table_thickness}"/>
         </geometry>
         <origin xyz="0 0 -${table_thickness/2}" rpy="0 0 0"/>
         <material name="brown">
            <color rgba="0.4 0.2 0 1"/>
         </material>
      </collision>
   </link>

   <joint name="world_to_table" type="fixed">
      <parent link="world"/>
      <child link="table_top"/>
      <origin xyz="0 0 ${table_height}" rpy="0 0 0"/>
   </joint>

   <xacro:macro name="table_leg" params="name x y z">
      <link name="${name}">
         <visual>
            <geometry>
               <box size="${leg_width} ${leg_width} ${z}"/>
            </geometry>
            <origin xyz="0 0 ${z / 2}" rpy="0 0 0"/>
            <material name="black">
               <color rgba="0.1 0.1 0.1 1"/>
            </material>
         </visual>
         <collision>
            <geometry>
               <box size="${leg_width} ${leg_width} ${z}"/>
            </geometry>
            <origin xyz="0 0 ${z / 2}" rpy="0 0 0"/>
            <material name="black">
               <color rgba="0.1 0.1 0.1 1"/>
            </material>
      </collision>
      </link>
      <joint name="joint_${name}" type="fixed">
         <parent link="world"/>
         <child link="${name}"/>
         <origin xyz="${x} ${y} 0" rpy="0 0 0"/>
         </joint>
   </xacro:macro>

   <xacro:table_leg name="leg_1" x="${table_length / 2 - leg_width / 2}" y="${table_width / 2 - leg_width / 2}" z="${table_height - table_thickness}"/>
   <xacro:table_leg name="leg_2" x="${-table_length / 2 + leg_width / 2}" y="${table_width / 2 - leg_width / 2}" z="${table_height - table_thickness}"/>
   <xacro:table_leg name="leg_3" x="${table_length / 2 - leg_width / 2}" y="${-table_width / 2 + leg_width / 2}" z="${table_height - table_thickness}"/>
   <xacro:table_leg name="leg_4" x="${-table_length / 2 + leg_width / 2}" y="${-table_width / 2 + leg_width / 2}" z="${table_height - table_thickness}"/>

   <!-- Camera holder properties -->
   <xacro:property name="holder_vertical_height" value="0.715"/>
   <xacro:property name="holder_horizontal_length" value="0.5"/>
   <xacro:property name="holder_size" value="0.1"/>

   <link name="camera_holder_vertical">
      <visual>
         <geometry>
         <box size="${holder_size} ${holder_size} ${holder_vertical_height}"/>
         </geometry>
         <origin xyz="0 0 0" rpy="0 0 0"/>
         <material name="red_transparent">
         <color rgba="1.0 1.0 0.5 0.3"/>
         </material>
      </visual>
      <collision>
         <geometry>
         <box size="${holder_size} ${holder_size} ${holder_vertical_height}"/>
         </geometry>
         <origin xyz="0 0 0" rpy="0 0 0"/>
         <material name="red_transparent">
         <color rgba="1.0 1.0 0.5 0.3"/>
         </material>
      </collision>
   </link>

   <joint name="table_to_camera_holder_vertical" type="fixed">
      <parent link="table_top"/>
      <child link="camera_holder_vertical"/>
      <origin xyz="0.27 ${-table_width/2 + 0.1} ${holder_vertical_height/2}" rpy="0 0 0"/>
   </joint>

   <link name="camera_holder_vertical_back">
      <visual>
         <geometry>
         <box size="${holder_size} ${holder_size} ${holder_vertical_height}"/>
         </geometry>
         <origin xyz="0 0 0" rpy="0 0 0"/>
         <material name="red_transparent">
         <color rgba="1.0 1.0 0.5 0.3"/>
         </material>
      </visual>
      <collision>
         <geometry>
         <box size="${holder_size} ${holder_size} ${holder_vertical_height}"/>
         </geometry>
         <origin xyz="0 0 0" rpy="0 0 0"/>
         <material name="red_transparent">
         <color rgba="1.0 1.0 0.5 0.3"/>
         </material>
      </collision>
   </link>

   <joint name="camera_holder_vertical_to_back" type="fixed">
      <parent link="camera_holder_vertical"/>
      <child link="camera_holder_vertical_back"/>
      <origin xyz="0 ${-holder_size} 0" rpy="0 0 0"/>
   </joint>

   <link name="camera_holder_horizontal">
      <visual>
         <geometry>
         <box size="${holder_size} ${holder_horizontal_length} ${holder_size}"/>
         </geometry>
         <origin xyz="0 0 0" rpy="0 0 0"/>
         <material name="red_transparent">
         <color rgba="1.0 1.0 0.5 0.3"/>
         </material>
      </visual>
      <collision>
         <geometry>
         <box size="${holder_size} ${holder_horizontal_length} ${holder_size}"/>
         </geometry>
         <origin xyz="0 0 0" rpy="0 0 0"/>
         <material name="red_transparent">
         <color rgba="1.0 1.0 0.5 0.3"/>
         </material>
      </collision>
   </link>

   <joint name="camera_holder_vertical_to_horizontal" type="fixed">
      <parent link="camera_holder_vertical"/>
      <child link="camera_holder_horizontal"/>
      <origin xyz="0 ${holder_horizontal_length/2 + holder_size/2} ${holder_vertical_height/2 - holder_size/2}" rpy="0 0 0"/>
   </joint>

   <!-- Virtual safety barriers (collision walls) -->
   <xacro:macro name="safety_barrier" params="name xyz size">
   <link name="${name}">
      <visual>
         <geometry>
         <box size="${size}"/>
         </geometry>
         <origin xyz="${xyz}" rpy="0 0 0"/>
         <material name="red_transparent">
         <color rgba="1.0 1.0 0.5 0.3"/>
         </material>
      </visual>
      <collision>
         <geometry>
         <box size="${size}"/>
         </geometry>
         <origin xyz="${xyz}" rpy="0 0 0"/>
      </collision>
   </link>
   <joint name="joint_${name}" type="fixed">
      <parent link="table_top"/>
      <child link="${name}"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
   </joint>
   </xacro:macro>

   <!-- Barrier behind the robot -->
   <xacro:safety_barrier name="barrier_back"
   xyz="${-table_length/2 - 0.3} 0 0.3"
   size="0.01 ${table_width} 0.8"/>

   <!-- Barrier to the left -->
   <xacro:safety_barrier name="barrier_left"
   xyz="0 ${-table_width/2 - 0.3} 0.3"
   size="${table_length} 0.01 0.8"/>

   <!-- Barrier to the right -->
   <xacro:safety_barrier name="barrier_right"
   xyz="0 ${table_width/2 + 0.3} 0.3"
   size="${table_length} 0.01 0.8"/>

   <!-- Barrier above -->
   <xacro:safety_barrier name="barrier_top"
   xyz="0 0 2.0"
   size="${table_length} ${table_width} 0.01"/>

   <!-- ur10e arm -->
   <link name="ur_fake_base_link"/>

   <joint name="table_to_ur" type="fixed">
      <parent link="table_top"/>
      <child link="ur_fake_base_link"/>
      <origin xyz="0 0 0.023" rpy="0 0 0"/>
   </joint>

   <xacro:ur_robot
      name="$(arg name)"
      tf_prefix="$(arg tf_prefix)"
      parent="ur_fake_base_link"
      joint_limits_parameters_file="$(arg joint_limit_params)"
      kinematics_parameters_file="$(arg kinematics_params)"
      physical_parameters_file="$(arg physical_params)"
      visual_parameters_file="$(arg visual_params)"
      transmission_hw_interface="$(arg transmission_hw_interface)"
      safety_limits="$(arg safety_limits)"
      safety_pos_margin="$(arg safety_pos_margin)"
      safety_k_position="$(arg safety_k_position)"
      use_fake_hardware="$(arg use_fake_hardware)"
      fake_sensor_commands="$(arg fake_sensor_commands)"
      sim_gazebo="$(arg sim_gazebo)"
      sim_ignition="$(arg sim_ignition)"
      headless_mode="$(arg headless_mode)"
      initial_positions="${xacro.load_yaml(initial_positions_file)}"
      use_tool_communication="$(arg use_tool_communication)"
      tool_voltage="$(arg tool_voltage)"
      tool_parity="$(arg tool_parity)"
      tool_baud_rate="$(arg tool_baud_rate)"
      tool_stop_bits="$(arg tool_stop_bits)"
      tool_rx_idle_chars="$(arg tool_rx_idle_chars)"
      tool_tx_idle_chars="$(arg tool_tx_idle_chars)"
      tool_device_name="$(arg tool_device_name)"
      tool_tcp_port="$(arg tool_tcp_port)"
      robot_ip="$(arg robot_ip)"
      script_filename="$(arg script_filename)"
      output_recipe_filename="$(arg output_recipe_filename)"
      input_recipe_filename="$(arg input_recipe_filename)"
      reverse_ip="$(arg reverse_ip)"
      script_command_port="$(arg script_command_port)"
      reverse_port="$(arg reverse_port)"
      script_sender_port="$(arg script_sender_port)"
      trajectory_port="$(arg trajectory_port)"
      >
      <origin xyz="${-table_length/2.0 + 0.1} 0 0" rpy="0 0 ${pi}"/>
   </xacro:ur_robot>

    <!-- Robotiq 2f-140 -->
    <xacro:include filename="$(find robotiq_description)/urdf/robotiq_2f_140_macro.urdf.xacro" />

    <xacro:robotiq_gripper name="RobotiqGripperHardwareInterface" prefix="" parent="tool0" use_fake_hardware="$(arg use_fake_hardware)" com_port="$(arg robotiq_com_port)">
        <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:robotiq_gripper>

   <link name="tip"/>

   <joint name="tool0_to_tip" type="fixed">
      <parent link="tool0"/>
      <child link="tip"/>
      <origin xyz="0 0 0.15" rpy="0 0 0"/>
   </joint>

</robot>
